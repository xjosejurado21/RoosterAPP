// Generated by view binder compiler. Do not edit!
package com.example.roosterapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.roosterapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final CardView nose;

  @NonNull
  public final CardView novedades;

  @NonNull
  public final CardView quizGame;

  @NonNull
  public final View topView;

  @NonNull
  public final CardView web;

  private ActivityMainBinding(@NonNull RelativeLayout rootView, @NonNull ImageView logo,
      @NonNull CardView nose, @NonNull CardView novedades, @NonNull CardView quizGame,
      @NonNull View topView, @NonNull CardView web) {
    this.rootView = rootView;
    this.logo = logo;
    this.nose = nose;
    this.novedades = novedades;
    this.quizGame = quizGame;
    this.topView = topView;
    this.web = web;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.nose;
      CardView nose = ViewBindings.findChildViewById(rootView, id);
      if (nose == null) {
        break missingId;
      }

      id = R.id.novedades;
      CardView novedades = ViewBindings.findChildViewById(rootView, id);
      if (novedades == null) {
        break missingId;
      }

      id = R.id.quizGame;
      CardView quizGame = ViewBindings.findChildViewById(rootView, id);
      if (quizGame == null) {
        break missingId;
      }

      id = R.id.top_view;
      View topView = ViewBindings.findChildViewById(rootView, id);
      if (topView == null) {
        break missingId;
      }

      id = R.id.web;
      CardView web = ViewBindings.findChildViewById(rootView, id);
      if (web == null) {
        break missingId;
      }

      return new ActivityMainBinding((RelativeLayout) rootView, logo, nose, novedades, quizGame,
          topView, web);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
